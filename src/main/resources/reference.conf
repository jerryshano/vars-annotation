accounts.service {
  url = ${?USER_ENDPOINT}
  timeout = "5 seconds"
  client.secret = ""
}

annotation.service {
  url = ${?ANNO_ENDPOINT}
  timeout = "30 seconds"
  client.secret = ""
  page.size = 20
  // when running multiple annosaurus instaces behind a load balancer use
  // "parallel" other wise "sequential" is recommended. Not the parse
  // only looks to see if the paging value starts with "par" to turn on the
  // parallel paging. Otherwise "sequential" is used
  paging = "parallel"
  // page.count is number of simultaneous page requests when paging is `parallel`
  page.count = 2
}

annotation.service.v2 {
    url = ${?ANNO_V2_ENDPOINT}
}

app {
  annotation {
    sample {
      association.comment = "comment"
      association.equipment = "sampled-by"
      association.reference = "sample-reference"
      default.concept = "equipment"
      // If the linknames below are present then the association table says that
      // the annotation contains a sample
      linknames = [
        "sample-reference"
        "sampled-by"
      ]
    }
    identity.reference = "identity-reference"
    upon = "upon"
    upon.root = "physical object"
  }
  defaults {
    //cameraid = "Doc Ricketts"
    group = "ROV"
    activity = "descend"
  }
  image.copyright.owner = ""
  injector.module.class = "org.mbari.m3.vars.annotation.MBARIInjectorModule"
}


concept.service {
  url = ${?CONCEPT_URL}
  timeout = "5 seconds"
  // This contains Java regex for link-templates to ignore in the UI
  template.filters = []
}

media.service {
  url = ${?MEDIA_ENDPOINT}
  timeout = "5 seconds"
  client.secret = ""
}

panoptes.service {
  url = ${?PANOPTES_ENDPOINT}
  timeout = "60 seconds"
  client.secret = ""
}

preferences.service {
  url = ${?PREFS_ENDPOINT}
  timeout = "5 seconds"
  client.secret = ""
}

sharktopoda {
  defaults {
    control.port = 8800
    framegrab.port = 5000
  }
}




